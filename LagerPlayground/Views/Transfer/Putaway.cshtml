@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@functions {
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

@model IEnumerable<Product_Locations>

@{
    ViewData["Title"] = "Putaway";
}

@*https://software-help.shiphero.com/hc/en-us/articles/4419353992077-ShipHero-Putaway*@

<div class="putaway-overall-container">
    <div class="putaway-overall-headline-container">
        <p class="trim putaway-overall-headline-text">Putaway List</p>

        <div class="putaway-overall-underheadline-container">
            <div class="putaway-underheadline-container">
                <div class="putaway-underline-skus-container">
                    <p class="trim putaway-underheadline-skus-text"><span class="putaway-underheadline-skus-number-text">@Model.Count()</span> SKUs</p>
                </div>
                <div class="putaway-underheadline-units-container">
                    <p class="trim putaway-underheadline-units-text"><span class="putaway-underheadline-units-number-text">@(ViewBag.AllUnits == null ? "0" : @ViewBag.AllUnits)</span> units</p>
                </div>
                <div class="clearBoth"></div>
            </div>
        </div>
    </div>

    @foreach (var item in Model)
    {
        <div class="putaway-product-template-container">
            <div class="putaway-product-info-template-container">
                <div class="putaway-product-image-float-container">
                    <div class="putaway-product-image-container">
                        <img class="putaway-product-image" src="~/Images/@(item.Product.Image == null ? "Placeholders/PlaceholderWhite.jpg" : "Products/" + item.Product.Image)" />
                    </div>
                </div>
                <div class="putaway-product-info-float-container">
                    <div class="putaway-product-info-main-container">
                        <p class="trim putaway-product-info-main-name">@item.Product.Name</p>
                        <p class="trim putaway-product-info-main-barcode">SKU <span style="font-weight: bold;">@item.Product.BarcodeID</span></p>
                        <p class="trim putaway-product-info-main-custommer">Custommer <span style="font-weight: bold;">J-Import</span></p>
                    </div>
                    <div class="putaway-product-info-secondary-container">
                        <a class="putaway-product-info-secondary-menu-btn" data-itemunits="@item.Quantity">Remove</a>
                        <p class="trim putaway-product-info-secondary-onhand">@item.Quantity on hand</p>
                    </div>
                    <div class="clearBoth"></div>
                </div>
                <div class="clearBoth"></div>
            </div>
            <div class="putaway-edit-numbertoputaway-container">
                <a class="trim putaway-edit-numbertoputaway-text"><span style="font-weight: bold;">@item.Quantity</span> to putaway <span class="putaway-edit-numbertoputaway-text-icon material-icons">edit</span></a>
            </div>
        </div>
    }

    <div class="putaway-overall-bottom-btns-container">
        <div class="putaway-bottom-btns-container">
            <div class="putaway-bottom-clear-btn-container">
                <a class="putaway-bottom-clear-btn">Clear</a>
            </div>
            <div class="putaway-bottom-startputaway-btn-container">
                <a class="putaway-bottom-startputaway-btn">Start Putaway</a>
            </div>
            <div class="clearBoth"></div>
        </div>
    </div>
</div>

@section Scripts {
<script>

    let allUnits = @ViewBag.AllUnits
    let allSkus = @Model.Count();

    let removeFromListBtn = $(".putaway-product-info-secondary-menu-btn");

    // Barcode scanner variables
    let barcode = '';
    let lastScannedBarcode = '';
    var currentBarcode = '';
    let productExist = false;
    let interval;

    let productBarcode = '';
    let currentProductQuantity = 0;


    // Remove Item from list
    $(document).on("click", ".putaway-product-info-secondary-menu-btn", function () {
        console.log(allUnits);
        allUnits = allUnits - $(this).data("itemunits");
        console.log(allUnits);

        $(this).find(".putaway-product-template-container").remove();
        $(".putaway-underheadline-units-number-text").text(allUnits);

    });

    // Scanner event and functions
    //document.addEventListener("keydown", function (evt) {
    //    if (interval) {
    //        clearInterval(interval);
    //    }

    //    if (evt.code.includes("Enter")) {
    //        if (barcode) {
    //            handleBarcode(barcode);
    //            barcode = '';
    //            return;
    //        }
    //    }
    //    if (!evt.code.includes("Shift") && !evt.code.includes("CapsLock")) {
    //        barcode += evt.key;
    //    }
    //    interval = setInterval(() => barcode = '', 20);
    //});

    //function handleBarcode(scanned_barcode) {
    //    scanned_barcode = scanned_barcode.trim();

    //    if (scanned_barcode.length >= 1) {
    //        currentBarcode = scanned_barcode;

    //        if (productBarcode == '' || productBarcode.length == 0) {
    //            GetNonLocationProduct(scanned_barcode);
    //        }
    //        else if(scanned_barcode == productBarcode) {
    //            currentProductQuantity++;
    //        }
    //        else {
    //            console.log("Ajax Function");
    //        }
    //    }
    //}

    // Ajax Functions

</script>
}
